import telebot
from telebot import types
import os
import pandas as pd
from flask import Flask, request

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
TOKEN = "8109304672:AAHkOQ8kzQLmHupii78YCd-1Q4HtDKWuuNk"
ADMIN_ID = 866964827
bot = telebot.TeleBot(TOKEN)

# Flask –¥–ª—è Render
app = Flask(__name__)

# === Excel —Ñ–∞–π–ª –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ ===
RESULTS_FILE = "results.xlsx"

if not os.path.exists(RESULTS_FILE):
    df = pd.DataFrame(columns=["user_id", "track", "rating"])
    df.to_excel(RESULTS_FILE, index=False)

# === –¢—Ä–µ–∫–∏ ===
TRACKS = [f"{str(i).zfill(3)}.mp3" for i in range(1, 31)]
user_progress = {}

# === –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç ===
@bot.message_handler(commands=["start"])
def start(message):
    user_id = message.chat.id
    user_progress[user_id] = 0

    bot.send_message(
        user_id,
        "–ü—Ä–∏–≤–µ—Ç! üëã\n"
        "–°–µ–π—á–∞—Å –±—É–¥–µ–º —Å–ª—É—à–∞—Ç—å —Ç—Ä–µ–∫–∏.\n"
        "–û—Ü–µ–Ω–∏ –∫–∞–∂–¥—ã–π –ø–æ —à–∫–∞–ª–µ –æ—Ç 1 –¥–æ 5:\n\n"
        "1 ‚Äî –æ—á–µ–Ω—å –ø–ª–æ—Ö–æ \n"
        "2 ‚Äî –ø–ª–æ—Ö–æ \n"
        "3 ‚Äî –Ω–æ—Ä–º–∞–ª—å–Ω–æ \n"
        "4 ‚Äî —Ö–æ—Ä–æ—à–æ \n"
        "5 ‚Äî —Å—É–ø–µ—Ä! \n\n"
        "–ü–æ–µ—Ö–∞–ª–∏!"
    )
    send_next_track(user_id)

# === –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç—Ä–µ–∫–∞ ===
def send_next_track(user_id):
    progress = user_progress.get(user_id, 0)

    if progress >= len(TRACKS):
        bot.send_message(user_id, "–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω ‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ!")
        return

    track_file = TRACKS[progress]
    if os.path.exists(track_file):
        with open(track_file, "rb") as f:
            msg = bot.send_audio(user_id, f, title=track_file)

        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ü–µ–Ω–∫–∏
        markup = types.InlineKeyboardMarkup()
        buttons = [
            types.InlineKeyboardButton(str(i), callback_data=f"rate_{i}")
            for i in range(1, 6)
        ]
        markup.add(*buttons)

        bot.send_message(user_id, "–¢–≤–æ—è –æ—Ü–µ–Ω–∫–∞?", reply_markup=markup)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º id —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç—Ä–µ–∫–æ–º, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º —É–¥–∞–ª–∏—Ç—å
        user_progress[user_id] = progress
        bot.user_data = getattr(bot, "user_data", {})
        bot.user_data[user_id] = msg.message_id
    else:
        bot.send_message(user_id, f"–§–∞–π–ª {track_file} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        user_progress[user_id] += 1
        send_next_track(user_id)

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ü–µ–Ω–∫–∏ ===
@bot.callback_query_handler(func=lambda call: call.data.startswith("rate_"))
def callback_rate(call):
    user_id = call.message.chat.id
    rating = int(call.data.split("_")[1])
    progress = user_progress.get(user_id, 0)
    track = TRACKS[progress]

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Excel
    df = pd.read_excel(RESULTS_FILE)
    new_row = pd.DataFrame([[user_id, track, rating]], columns=df.columns)
    df = pd.concat([df, new_row], ignore_index=True)
    df.to_excel(RESULTS_FILE, index=False)

    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç—Ä–µ–∫–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏
    try:
        bot.delete_message(user_id, bot.user_data[user_id])
        bot.delete_message(user_id, call.message.message_id)
    except:
        pass

    # –°–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫
    user_progress[user_id] += 1
    send_next_track(user_id)

# === –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ results.xlsx –∞–¥–º–∏–Ω—É ===
@bot.message_handler(commands=["results"])
def send_results(message):
    if message.chat.id == ADMIN_ID:
        if os.path.exists(RESULTS_FILE):
            with open(RESULTS_FILE, "rb") as f:
                bot.send_document(message.chat.id, f)
        else:
            bot.send_message(message.chat.id, "–§–∞–π–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")

# === Flask webhook ===
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    json_str = request.stream.read().decode("UTF-8")
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "OK", 200

@app.route("/", methods=["GET"])
def index():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

if __name__ == "__main__":
    bot.remove_webhook()
    bot.set_webhook(url=f"https://musicbot-knqj.onrender.com/{TOKEN}")
    app.run(host="0.0.0.0", port=10000)
